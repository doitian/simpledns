Server = {
  options: {
    pow: './pow/0.3.2',
    port: '20560',
    domains: 'dev'
  },

  optionPattern: /^--([a-z]+)=(.*)/,

  usage: function(code, message) {
    if (message) {
      process.stdout.write(message + '\n');
    }
    process.stdout.write('node server.js [--pow=./pow/0.3.2] [--port=20560] [--domains=dev]\n');
    process.exit(code);
  },

  parseOptions: function() {
    var matches, key, value;
    process.argv.slice(2).forEach(function (val) {
      if (val == '-h' || val == '--help') {
        Server.usage(0);
      }

      matches = val.match(Server.optionPattern);
      if (matches === null) {
        Server.usage(1, 'invalid option: ' + val);
      } else {
        key = matches[1];
        value = matches[2];
        if (key in Server.options) {
          Server.options[key] = value;
        } else {
          Server.usage(2, 'unknown key: ' + key);
        }
      }
    });
  },

  domainsPattern: function() {
    return new RegExp(Server.options.domains.replace(/,/g, '|').replace(/./g, '\\.'));
  },

  startServer: function() {
    var klass = require(Server.options.pow + '/lib/dns_server.js');
    var server = new klass({
      dnsDomainPattern: Server.domainsPattern()
    });

    server.listen(parseInt(Server.options.port));
  },

  resolver: function() {
    return 'namespace: 127.0.0.1\nport: ' + Server.options.port + '\n';
  }
}

Server.parseOptions();

process.stdout.write("You need to save following content in /etc/resolver/simpledns\n\n");
process.stdout.write("# File generated by simpledns/server.js\n");
process.stdout.write(Server.resolver());
process.stdout.write("# File content ends here\n\n");

Server.startServer();
